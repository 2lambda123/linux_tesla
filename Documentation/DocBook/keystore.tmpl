<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" []>

<book id="keystore">
  <bookinfo>
    <title>Keystore Kernel Development Guide</title>
    <abstract>
!Pinclude/uapi/security/keystore_api_user.h Introduction
    </abstract>
    <copyright>
      <year>2016</year>
      <holder>Intel Corporation</holder>
    </copyright>
    <legalnotice>
      <para>
	The contents of this file may be used under the terms of the GNU
	General Public License version 2 (the "GPL") as distributed in
	the kernel source COPYING file.
      </para>
    </legalnotice>
   <revhistory>
      <!-- Put document revisions here, newest first. -->
      <revision>
	<revnumber>1.0</revnumber>
	<date>2016-02-29</date>
	<authorinitials>TJB</authorinitials>
	<revremark>First addition of Documentation
	</revremark>
      </revision>
    </revhistory>
  </bookinfo>
<toc></toc>
<part id="ksOverview">
      <title>Keystore Overview</title>
      <partintro>
        <para>
          This part of the Keystore Guide gives an overview of Keystore.
        </para>
      </partintro>
      <chapter id="ksIntro">
        <title>Introduction</title>
        <para>
!Pinclude/uapi/security/keystore_api_user.h Introduction
        </para>
      </chapter>
      <chapter id="ksWrapping">
        <title>Key Wrapping</title>
        <para>
!Pinclude/uapi/security/keystore_api_user.h Key Wrapping
        </para>
      </chapter>
      <chapter id="ksBackup">
        <title>Backup and Migration</title>
        <para>
!Pinclude/uapi/security/keystore_api_user.h Backup and Migration
        </para>
      </chapter>
</part>
<part id="ksPublic">
      <title>Public Interfaces</title>
      <partintro>
        <para>
          This part of the Keystore Guide documents the kernel and user-space public interfaces.
        </para>
      </partintro>
      <chapter id = "ksPubCommon">
        <title>Keystore Common Structs</title>
!Pinclude/uapi/security/keystore_api_common.h Introduction
        <sect1>
!Iinclude/uapi/security/keystore_api_common.h
        </sect1>
      </chapter>
      <chapter id = "ksPubUser">
        <title>Keystore User-Space Interface</title>
!Pinclude/uapi/security/keystore_api_user.h Keystore Device
        <sect1>
        </sect1>
        <sect1>
        <title>Keystore IOCTL commands and structs</title>
!Pinclude/uapi/security/keystore_api_user.h Keystore IOCTLs
!Pinclude/uapi/security/keystore_api_user.h Keystore ioctl structs
!Iinclude/uapi/security/keystore_api_user.h
        </sect1>
      </chapter>
      <chapter id = "ksPubKernel">
        <title>Keystore Kernel Interface</title>
!Pinclude/security/keystore_api_kernel.h Introduction
        <sect1>
!Iinclude/security/keystore_api_kernel.h
        </sect1>
      </chapter>
</part>
<part id="ksInternals">
      <title>Keystore Internal Structure</title>
      <partintro>
        <para>
          This part of the Keystore guide gives an overview of the internal
          workings of Keystore.
        </para>
      </partintro>
      <chapter id="ksInternalOverview">
        <title>Keystore Internal Overview</title>
        <para>
          The user space interface is provided via the keystore_api_user.h ioctls decsribed
          <link linkend='ksPubUser'>here</link>. This itself calls into the
          kernel space interface keystore_api_kernel.h, described in
          <link linkend='ksPubKernel'>here</link>. The remaining blocks
          are described in the following sections.
        </para>
      </chapter>
      <chapter id="ksDevice">
        <title>Keystore Device</title>
        <para>
          The Keystore device control can be found in the keystore_kmod.c file. The ioctl
          handling is separated into the dedicated ioctl.c file.
          Keystore will check whether Secure boot is enabled before starting the module.
        </para>
        <sect1>
!Isecurity/keystore/keystore_kmod.c
!Isecurity/keystore/include/keystore_ioctl.h
        </sect1>
       </chapter>
      <chapter id="ksSecureBoot">
        <title>Secure Boot</title>
        <sect1>
!Pinclude/security/sb.h Secure Boot
!Einclude/security/sb.h
        </sect1>
       </chapter>
      <chapter id="ksSeed">
        <title>Seed Provisioning</title>
        <sect1>
!Psecurity/keystore/include/keystore_seed.h Seed
!Isecurity/keystore/include/keystore_seed.h
        </sect1>
       </chapter>
      <chapter id="ksContext">
        <title>Keystore Context</title>
        <sect1>
          <para>
            The keystore context is resposible for caching information
            about the client, including the current client keys for wrapping.
            The context is split into two parts: one thread-safe interface for
            access by keystore, and internal context functions.
          </para>
        </sect1>
        <sect1>
          <title>Keystore Thread-Safe Context Interface</title>
!Psecurity/keystore/include/keystore_context_safe.h Introduction
!Isecurity/keystore/include/keystore_context_safe.h
        </sect1>
        <sect1>
          <title>Keystore Context Interface</title>
!Psecurity/keystore/include/keystore_context.h Introduction
!Isecurity/keystore/include/keystore_context.h
        </sect1>
       </chapter>
      <chapter id="ksOperations">
        <title>Keystore Operations</title>
        <para>
!Psecurity/keystore/include/keystore_operations.h Introduction
        </para>
        <sect1>
!Isecurity/keystore/include/keystore_operations.h
        </sect1>
       </chapter>
      <chapter id="ksClient">
        <title>Keystore Client</title>
        <para>
!Psecurity/keystore/include/keystore_client.h Introduction
        </para>
        <sect1>
!Isecurity/keystore/include/keystore_client.h
        </sect1>
       </chapter>
      <chapter id="ksOEMKeys">
        <title>OEM Attestation Key</title>
        <sect1>
          <para>
            The keystore backup and migration keys send from the OEM
            must be signed with an RSA key. Keystore checks the signatures
            of this data against the public component of the RSA key.
            Keystore must have access to an OEM key which is part of the
            root of trust. There are two options as defined in the following
            sections.
          </para>
        </sect1>
        <sect1>
          <title>OEMKey</title>
          <sect2>
            <para>
              The key address and size can be provided by the bootloader
              on the kernel command line. Here the full raw key is expected.
            </para>
          </sect2>
          <sect2>
!Iinclude/security/oem_key.h
          </sect2>
        </sect1>
        <sect1>
          <title>Manifest Attestation</title>
          <sect2>
            <para>
              In this case the Key Manifest extension is provided as
              an address and size on the command line. This contains
              only the hashes of the public keys. The key itself must
              be inserted into the kernel keyring separately.
            </para>
          </sect2>
          <sect2>
!Iinclude/security/manifest.h
          </sect2>
        </sect1>
       </chapter>
      <chapter id="ksCrypto">
        <title>Keystore Crypto Interface</title>
        <sect1>
          <para>
            Keystore requires a number of cryptographic operations. The are provided
            either via the Kernel crypto-API, or (in the case of ECC) directly via
            imported code.
          </para>
        </sect1>
        <sect1>
          <title>AES</title>
          <sect2>
!Isecurity/keystore/include/keystore_aes.h
          </sect2>
        </sect1>
        <sect1>
          <title>ECC</title>
          <sect2>
!Isecurity/keystore/include/keystore_ecc.h
          </sect2>
        </sect1>
        <sect1>
          <title>MAC</title>
          <sect2>
!Isecurity/keystore/include/keystore_mac.h
          </sect2>
        </sect1>
        <sect1>
          <title>Random Numbers</title>
          <sect2>
!Isecurity/keystore/include/keystore_rand.h
          </sect2>
        </sect1>
       </chapter>
      <chapter id="ksDevelopment">
        <title>Keystore Development Tools</title>
        <para>
          This section contains information on Keystore debugging and
          development features.
        </para>
        <sect1>
          <title>Debugging Tools</title>
!Isecurity/keystore/include/keystore_debug.h
        </sect1>
        <sect1>
          <title>Testing Framework</title>
!Isecurity/keystore/include/keystore_tests.h
        </sect1>
       </chapter>
</part>
</book>
